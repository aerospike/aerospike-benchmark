name: Build:Main
on:
  push:
    branches: [ main ]
jobs:
  build-libraries:
    runs-on: ubuntu-latest
    env:
      CLIENTREPO: ${GITHUB_WORKSPACE}/client
    strategy:
      matrix: 
        ev-lib: ["", libev, libuv, libevent]
    steps:
    - name: Install event libs
      run: sudo apt-get install -y libevent-dev libev-dev libuv1-dev
    - name: Download libyaml
      uses: dsaltares/fetch-gh-release-asset@0.0.5
      with:
        repo: "yaml/libyaml"
        version: "tags/0.2.5"
        file: yaml-0.2.5.tar.gz
    - name: Cache libyaml
      id: cache-libyaml
      uses: actions/cache@v2
      env:
        cache-name: libyaml
      with:
        path: yaml-0.2.5
        key: yaml-0.2.5-${{ runner.os }}
    - name: Build libyaml
      id: build-libyaml
      if: steps.cache-libyaml.outputs.cache-hit != 'true'
      run: |
        tar xvfz yaml-0.2.5.tar.gz && cd yaml-0.2.5
        ./configure
        make
    - name: install libyaml
      run: |
        cd yaml-0.2.5
        sudo make install
    - name: Checkout c client
      uses: actions/checkout@v2
      with:
        repository: aerospike/aerospike-client-c
        submodules: recursive
        path: client
    - name: Checkout benchmark
      uses: actions/checkout@v2
      with: 
        path: main
        submodules: recursive
    - name: Build client lib
      run: make EVENT_LIB=${{ matrix.ev-lib }}
      working-directory: client
    - name: Build benchmark
      run: make EVENT_LIB=${{ matrix.ev-lib }}
      working-directory: main
    - name: Get artifact name
      run: |
        set -e
        NAME=-${{ matrix.ev-lib}}
        if [ "${NAME}" = "-" ]; then NAME="" ; fi
        echo "::set-output name=name::benchmark$NAME"
      id: get_name
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with: 
        name: ${{steps.get_name.outputs.name}}
        path: main/target/benchmark
        if-no-files-found: error
  pre-release:
    needs: build-libraries
    runs-on: ubuntu-latest
    
    steps: 
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3.1
    
      - name: Checkout benchmark
        uses: actions/checkout@v2
        with: 
          submodules: recursive
      - name: Get artifacts
        uses: actions/download-artifact@v2
        with: 
          path: binaries/
      - name: Create tarball
        run: tar -czf binaries.tar.gz binaries
      - name: Automatic Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Snapshot Build"
          files: |
            binaries.tar.gz
            LICENSE.md
            README.md
